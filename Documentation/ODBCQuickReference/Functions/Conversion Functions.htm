<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Conversion Functions</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=599>
<meta name=layout-width content=968>


<!--(Links)=========================================================-->

<link href="..\..\ODBC_Reference.css" type="text/css" rel="stylesheet">



</head>

<!--(Body)==========================================================-->


<body>

<h1>Conversion Functions</h1>

<p class=tab_header>The CAST function defined in SQL92 is equivalent to 
 the CONVERT function defined in ODBC. The syntax of the equivalent functions 
 is as follows:</p>

<p>ODBC: SELECT { fn CONVERT (value-exp, data-type)} ....</p>

<p>CAST: SELECT CAST (value-exp AS data-type) ....</p>

<p>To see if either is supported, look this up in the ODBC tree of the 
 Open ODBCQueryTool:</p>

<p><img src="..\Pictures\Conversion_functions.bmp"
		x-maintain-ratio=TRUE
		style="border: none;
				width: 338px;
				height: 218px;
				float: none;
				border-style: none;
				border-style: none;"
		width=338
		height=218
		border=0> </p>

Here you can find whether the standard CAST is supported (in this case 
 it isn't) and if the ODBC function CONVERT is your friendly helper (in 
 this case it is!) 

<!--begin!kadov{{--><br><!--}}end!kadov--><!--kadov_tag{{<implicit_p>}}-->Per 
 datatype you can find the supported conversions to another datatype by 
 prefixing the desired datatype with the keyword &quot;SQL_&quot;. 

<!--begin!kadov{{--><br><!--}}end!kadov--><!--kadov_tag{{<implicit_p>}}-->&nbsp; 
 

<!--begin!kadov{{--><br><!--}}end!kadov--><!--kadov_tag{{<implicit_p>}}-->Example: 
 To convert a decimal to a character field use: &quot;{ fn CONVERT( numberfield, 
 SQL_CHAR)} ...&quot; 

<!--begin!kadov{{--><br><!--}}end!kadov--><!--kadov_tag{{<implicit_empty_p>}}-->&nbsp;<br><!--kadov_tag{{</implicit_empty_p>}}-->


<!--(HR)============================================================-->
<hr style="float: aligncenter; height: 1px;"
	align=center
	size=1>


<p>This SQL Reference is not the complete documentation for your SQL language. 
 For more detailed information see the documentation of your RDBMS.</p>

</body>

</html>
