<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->

<!--(Document created with RoboEditor. )============================-->

<!--(==============================================================)-->

<head>
    <title>Binding to a NUMBER</title>
    <!--(Meta)==========================================================-->
    <meta http-equiv="content-type" content="text/html; charset=us-ascii">
    <meta name="generator" content="RoboHELP by eHelp Corporation - www.ehelp.com">
    <meta name="generator-major-version" content="0.1">
    <meta name="generator-minor-version" content="1">
    <meta name="filetype" content="kadov">
    <meta name="filetype-version" content="1">
    <meta name="page-count" content="1">
    <meta name="layout-height" content="1359">
    <meta name="layout-width" content="968">
    <!--(Links)=========================================================-->
    <link rel="StyleSheet" href="../default.css" type="text/css">
</head>
<!--(Body)==========================================================-->

<body>
    <h1>Binding to a NUMBER</h1>

    <p>An Oracle NUMBER is not a 'double'. A SQL DECIMAL is not an approximate, but a exact numeric type. But the official
    Oracle ODBC drivers can only select their own NUMBER fields with a precision of 15 digits. But hey: an Oracle number has a
    (38,38) precision and scale. How is this possible?</p>

    <p>Well: Oracle does not have support for the SQL_NUMERIC_STRUCT type of the ODBC standard. So a number can only be bound
    to with SQLBindColumn with the following datatypes: SQL_SMALLINT, SQL_INTEGER, SQL_BIGINT, SQL_FLOAT, SQL_REAL and
    SQL_CHAR. (<a href="../ODBCQuickReference/Elements/Datatypes.htm">See also the quick reference guide about datatypes</a>)
    These datatypes have larger constraints on the number of precision and scale than the Oracle Number. (4, 10, 19, 15, 7
    digits).</p>

    <p>So if we would insert a number into a database, say: 123.1234567890123456789012345 this would certainly work in a SQL
    script. But re-selecting this number from the database with standard ODBC functionality won't work. As this is a number
    from the mathematical collection of real numbers (R) only SQL_FLOAT comes somewhere near, but the number will always be
    truncated (or rounded?) on 15 decimal digits. Which in its turn means that you can put something into a database that you
    cannot possibly re-select!!</p>

    <p>OK, there is one escape: we could try to bind to this query column as a SQL_CHAR. But to our surprise, that turns up
    ugly as well with a truncated number of 15 decimal places (123.123456789012). After some testing the conclusion is
    inescapable: Oracle does store the NUMBER's internally in the ODBC driver in the C 'double' datatype. There is no way that
    you would extract a number with the greater precision and scale then 15 decimal places. And that's for Oracle's
    NUMBER(38,38) datatype. Less than half the storage in the database.</p>

    <h2>Edo's solution</h2>

    <p>The solution is clear: store the Oracle NUMBER's internally in a OCINumber structure (an Oracle internal structure to
    store NUMBER's) and convert them at the very last moment to whatever we want, in whatever precision and scale we want.
    Integers, big integers, shorts, floats, reals, but also the SQL_NUMERIC_STRUCT which is the ODBC standard way of
    representing the ISO 9075:SQL standard DECIMAL with a precision and scale of 32. And of course also the conversion to
    character strings with the full precision and scale.</p>

    <h2>Binding to a NUMBER column</h2>

    <p>Either way (inserting in a database or selecting from a database) we must bind an ODBC datatype to the database column
    that holds a NUMBER in a table. We do this with the SQLBindParameter (for input) or the SQLBindColumn (for output)
    functions. Also the SQLDescribeCol function has a say in this, because it describes a column from a select before we bind
    to it.</p>

    <p>This table holds all conversions done by the EDO driver.</p>
    <!--(Table)=========================================================-->

    <table color="#99CCFF" x-use-null-cells="" style=
    "width: 100%; x-border-left: 1px table-solid; x-border-top: 1px table-solid; x-border-right: 1px table-solid; x-border-bottom: 1px table-solid; border-collapse: separate; border-spacing: 0px; x-border-left: 1px table-solid; x-border-top: 1px table-solid; x-border-right: 1px table-solid; x-border-bottom: 1px table-solid; border-collapse: separate; border-spacing: 0px;"
    cellspacing="0" width="100%" border="1">
        <tr>
            <td style=
            "background-color: #99ccff; x-cell-content-align: top; width: 155px; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" bgcolor="#99CCFF" width="155px">
                <p>Bind type</p>
            </td>

            <td style=
            "background-color: #99ccff; x-cell-content-align: top; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" bgcolor="#99CCFF">
                <p class="tab_header">What a NUMBER column does</p>
            </td>
        </tr>

        <tr>
            <td style=
            "x-cell-content-align: top; width: 155px; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" width="155px">
                <p class="tab_func">SQL_CHAR</p>
            </td>

            <td style=
            "x-cell-content-align: top; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;" valign=
            "top">
                <p class="tab_desc">Numbers will be converted with OCI (Oracle Call Interface) functions with full precision
                and scale</p>
            </td>
        </tr>

        <tr>
            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; width: 155px; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" width="155px">
                <p class="tab_func">SQL_SHORT</p>
            </td>

            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;" valign=
            "top">
                <p class="tab_desc">Numbers will be converted to signed integers (16 bits)</p>
            </td>
        </tr>

        <tr>
            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; width: 155px; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" width="155px">
                <p class="tab_func">SQL_USHORT</p>
            </td>

            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;" valign=
            "top">
                <p class="tab_desc">Numbers will be converted to unsigned integers (16 bits)</p>
            </td>
        </tr>

        <tr>
            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; width: 155px; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" width="155px">
                <p class="tab_func">SQL_LONG</p>
            </td>

            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;" valign=
            "top">
                <p class="tab_desc">Numbers will be converted to signed integers (32 bits)</p>
            </td>
        </tr>

        <tr>
            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; width: 155px; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" width="155px">
                <p class="tab_func">SQL_ULONG</p>
            </td>

            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;" valign=
            "top">
                <p class="tab_desc">Numbers will be converted to unsigned integers (32 bits)</p>
            </td>
        </tr>

        <tr>
            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; width: 155px; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" width="155px">
                <p class="tab_func">SQL_SBIGINT</p>
            </td>

            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;" valign=
            "top">
                <p class="tab_desc">Numbers will be converted to signed integers (64 bits)</p>
            </td>
        </tr>

        <tr>
            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; width: 155px; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" width="155px">
                <p class="tab_func">SQL_UBIGINT</p>
            </td>

            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;" valign=
            "top">
                <p class="tab_desc">Numbers will be converted to signed integers (64 bits)</p>
            </td>
        </tr>

        <tr>
            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; width: 155px; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" width="155px">
                <p class="tab_func">SQL_FLOAT</p>
            </td>

            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;" valign=
            "top">
                <p class="tab_desc">Numbers will be converted to float (32 bit IEEE floating number)</p>
            </td>
        </tr>

        <tr>
            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; width: 155px; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" width="155px">
                <p class="tab_func">SQL_REAL</p>
            </td>

            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;" valign=
            "top">
                <p class="tab_desc">Numbers will be converted to float (64 bit IEEE floating number)</p>
            </td>
        </tr>

        <tr>
            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; width: 155px; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" width="155px">
                <p class="tab_func">SQL_BIT</p>
            </td>

            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;" valign=
            "top">
                <p class="tab_desc">Numbers will be converted to 1 bit (0 or 1)</p>
            </td>
        </tr>

        <tr>
            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; width: 155px; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" width="155px">
                <p class="tab_func">SQL_TINYINT</p>
            </td>

            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;" valign=
            "top">
                <p class="tab_desc">Numbers will be converted to signed integers (8 bits)</p>
            </td>
        </tr>

        <tr>
            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; width: 155px; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" width="155px">
                <p class="tab_func">SQL_UTINYINT</p>
            </td>

            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;" valign=
            "top">
                <p class="tab_desc">Numbers will be converted to unsigned integers (8 bits)</p>
            </td>
        </tr>

        <tr>
            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; width: 155px; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" width="155px">
                <p class="tab_func">SQL_NUMERIC</p>
            </td>

            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;" valign=
            "top">
                <p class="tab_desc">Numbers will be converted to SQL_NUMERIC_STRUCT. (32 digits, not bits!!)</p>
            </td>
        </tr>
    </table>

    <p>&nbsp;</p>

    <p>What SQLDescribeCol returns on basis of a NUMBER. Of course you can always bind to a number with a different datatype
    like SQL_SHORT, SQL_LONG, SQL_SBIGINT.</p>
    <!--(Table)=========================================================-->

    <table color="#99CCFF" x-use-null-cells="" style=
    "width: 100%; x-border-left: 1px table-solid; x-border-top: 1px table-solid; x-border-right: 1px table-solid; x-border-bottom: 1px table-solid; border-spacing: 0px; x-border-left: 1px table-solid; x-border-top: 1px table-solid; x-border-right: 1px table-solid; x-border-bottom: 1px table-solid; border-collapse: separate; border-spacing: 0px;"
    cellspacing="0" width="100%" border="1">
        <col>
        <col>
        <col>

        <tr>
            <td colspan="1" rowspan="1" style=
            "background-color: #99ccff; x-cell-content-align: top; width: 155px; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" bgcolor="#99CCFF" width="155px">
                <p>Precision</p>
            </td>

            <td style=
            "background-color: #99ccff; x-cell-content-align: top; width: 155px; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" bgcolor="#99CCFF" width="155px">
                <p>Scale</p>
            </td>

            <td style=
            "background-color: #99ccff; x-cell-content-align: top; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" bgcolor="#99CCFF">
                <p class="tab_header">&nbsp;</p>
            </td>
        </tr>

        <tr>
            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; width: 155px; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" width="155px">
                <p class="tab_func">1 upto 10</p>
            </td>

            <td style=
            "x-cell-content-align: top; width: 155px; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" width="155px">
                <p>0</p>
            </td>

            <td style=
            "x-cell-content-align: top; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;" valign=
            "top">
                <p class="tab_desc">SQL_INTEGER</p>
            </td>
        </tr>

        <tr>
            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; width: 155px; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" width="155px">
                <p class="tab_func">0</p>
            </td>

            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; width: 155px; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" width="155px">
                <p>0</p>
            </td>

            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;" valign=
            "top">
                <p class="tab_desc">SQL_INTEGER if option IntegerSpeedUp is set</p>

                <p class="tab_desc">SQL_NUMERIC / SQL_CHAR instead</p>
            </td>
        </tr>

        <tr>
            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; width: 155px; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" width="155px">
                <p class="tab_func">1 upto 10 or 126</p>
            </td>

            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; width: 155px; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" width="155px">
                <p>-127</p>
            </td>

            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;" valign=
            "top">
                <p class="tab_desc">SQL_FLOAT</p>
            </td>
        </tr>

        <tr>
            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; width: 155px; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" width="155px">
                <p class="tab_func">1 upto 38</p>
            </td>

            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; width: 155px; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;"
            valign="top" width="155px">
                <p>16 upto 38</p>
            </td>

            <td colspan="1" rowspan="1" style=
            "x-cell-content-align: top; padding-left: 2px; padding-top: 2px; padding-right: 2px; padding-bottom: 2px;" valign=
            "top">
                <p class="tab_desc">SQL_NUMERIC</p>
            </td>
        </tr>
    </table>

    <p style="font-weight: normal;">&nbsp;</p>

    <p style="font-weight: normal;">This means, for instance, that a NUMBER(20,10) will be reported back as a SQL_FLOAT. Of
    course you can choose to bind to it as a SQL_NUMERIC or a SQL_CHAR.</p>

    <p style="font-weight: normal;">But a NUMBER(38,25) will never be reported back as a SQL_FLOAT, because that would mean
    that the numbers would be truncated. It will always be reported as a SQL_NUMERIC.</p>

    <h4 style="margin-left: 0px;">Footnote</h4>

    <p>The impossibility to extract decimal numbers with a greater precision and scale than 15 was the bug (feature?) that led
    to the <a href="../About_EDO.htm">EDO project</a> in the first place.</p>

    <p>&nbsp;</p>
</body>
</html>
